@import "color-map.scss";

$theme-colors: $dark-theme-colors;
$color-map: ();
@mixin getThemeColors() {
	@if $carbon--theme ==
		$carbon--theme--g100 or
		$carbon--theme ==
		$carbon--theme--g90
	{
		$theme-colors: $dark-theme-colors;
		@include color-property(null, $dark-theme-colors);
	} @else {
		$theme-colors: $white-theme-colors;
		@include color-property(null, $white-theme-colors);
	}
}

@mixin color-property($name, $theme-colors) {
	@if type-of($theme-colors) == map {
		@each $category, $value in $theme-colors {
			@if type-of($value) == map {
				@if $name == null {
					@include color-property("#{$category}", $value);
				} @else {
					@include color-property("#{$name}-#{$category}", $value);
				}
			} @else {
				$color-map: map-merge(
					$color-map,
					(
						"#{$name}-#{$category}": $value
					)
				);
			}
		}
	} @else {
		#{$name}: $theme-colors;
	}
}

.#{$prefix}--#{$charts-prefix}--chart-svg {
	@include getThemeColors();

	@each $token, $color in $color-map {
		.fill-#{$token} {
			fill: $color;
			&:hover {
				fill: darken($color, 7%);
			}
		}

		.stroke-#{$token} {
			stroke: $color;
		}
	}
}

.#{$prefix}--#{$charts-prefix}--tooltip {
	@include getThemeColors();

	@each $token, $color in $color-map {
		.tooltip-#{$token} {
			background-color: $color;
		}
	}
}
