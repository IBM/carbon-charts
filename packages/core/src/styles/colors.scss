@import './mixins';
// Preferred
@include carbon--colors();

$current-theme: "dark";
$color-prefix: "carbon";
$five-color-pairs: (
	"5-1-1":#002d9c,
	"5-1-2":#009d9a,
	"5-1-3":#9f1853,
	"5-1-4":#570408,
	"5-1-5":#a56eff,
	"5-2-1":#6929c4,
	"5-2-2":#1192e8,
	"5-2-3":#005d5d,
	"5-2-4":#9f1853,
	"5-2-5":#570408
);

@mixin custom-property($name, $value) {
	@if type-of($value) == map {
		@each $property, $property-value in $value {
		  // Only support one-level of depth for values that are maps. This is to
		  // avoid bringing properties like `breakpoints` on type tokens
		  @if type-of($property-value) != map {
			@include custom-property('#{name}-#{$property}', $property-value);
		  }
		}
	} @else {
		--#{$name}: #{$value};
	}
}

@if $carbon--theme == ($carbon--theme--g100 or $carbon--theme--g90) {
	$current-theme: "dark";
} @else {
	$current-theme: "light";
}

$name: 'color-fill';
$tokens: (
	"5-1-1", '5-1-2','5-1-3','5-1-4','5-1-5',
	'5-2-1','5-2-2','5-2-3','5-2-4','5-2-5'
);

.#{$prefix}--#{$charts-prefix}--chart-svg {
	@include custom-property($name, $five-color-pairs);

	@each $token in $tokens {
		$value: map-get($five-color-pairs, $token);

		.#{$name}-#{$token} {
			fill: #{$value};
			&:hover {
				fill: darken($value, 7%);
			}
		}
	}
}